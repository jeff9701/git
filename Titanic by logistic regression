import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from google.colab import drive
drive.mount("/content/drive/")
gender=pd.read_csv("/content/drive/MyDrive/python資料科學與機械學習/gender_submission.csv")
test=pd.read_csv("/content/drive/MyDrive/python資料科學與機械學習/test.csv")
train=pd.read_csv("/content/drive/MyDrive/python資料科學與機械學習/train.csv")

test_ids = test["PassengerId"]
def clean(data):
  data=data.drop(["PassengerId","Name","Ticket"],axis=1)
  cols=["SibSp","Parch","Fare","Age"]
  for col in cols:
    data[col].fillna(data[col].mean(),inplace=True)
  data.Embarked.fillna("U",inplace=True)
  return data

train_data=clean(train)
test_data=clean(test)
x=train_data.iloc[:,1:]
y=train_data.iloc[:,0]

concat_data=pd.concat([x,test_data],axis=0)
dummy_data=pd.get_dummies(concat_data)
dummy_train=dummy_data.iloc[:891,:]
dummy_test=dummy_data.iloc[891:,:]

from sklearn.preprocessing import StandardScaler
scaler=StandardScaler()
sc_x=scaler.fit_transform(dummy_train)
sc_test_data_x=scaler.fit_transform(dummy_test)

logistic = LogisticRegression()
logistic.fit(sc_x,y)
predictions = logistic.predict(sc_test_data_x)
submission_data = pd.DataFrame({"PassengerId":test_ids.values,"Survived":predictions})
